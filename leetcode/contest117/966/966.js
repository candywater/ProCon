// Generated by CoffeeScript 2.3.2
(function() {
  /*
   * @param {string[]} wordlist
   * @param {string[]} queries
   * @return {string[]}
   */
  var q, spellchecker, w;

  spellchecker = function(wordlist, queries) {
    var dict, entries, flg, i, insidedict, j, k, key, l, len, len1, low, res, tmp;
    dict = new Map();
    res = [];
    for (k = 0, len = wordlist.length; k < len; k++) {
      i = wordlist[k];
      low = i.toLowerCase();
      low = low.replace(/[aeiou]/g, "a");
      // low = low.split("").sort().join("");
      if (!dict.has(low)) {
        insidedict = new Set();
        insidedict.add(i);
        dict.set(low, insidedict);
      } else {
        dict.get(low).add(i);
      }
    }
    for (l = 0, len1 = queries.length; l < len1; l++) {
      i = queries[l];
      low = i.toLowerCase();
      key = low.replace(/[aeiou]/g, "a");
      // low = low.split("").sort().join("");
      if (dict.has(key)) {
        if (dict.get(key).has(i)) {
          res.push(i);
        } else {
          flg = true;
          entries = dict.get(key).entries();
          for (j of entries) {
            tmp = j[0].toLowerCase();
            if (tmp === low) {
              res.push(j[0]);
              flg = false;
              break;
            }
          }
          if (flg) {
            res.push(dict.get(key).entries().next().value[0]);
          }
        }
      } else {
        res.push("");
      }
    }
    
    // console.log dict
    return res;
  };

  w = ["KiTe", "kite", "hare", "Hare"];

  q = ["kite", "Kite", "KiTe", "Hare", "HARE", "Hear", "hear", "keti", "keet", "keto"];

  // console.log spellchecker(w, q)
  w = ["zuo", "zeo"];

  q = ["zEo"];

  console.log(spellchecker(w, q));

}).call(this);
