// Generated by CoffeeScript 2.3.2
(function() {
  "use strict";
  var binary_search, find_start_pos, list, search;

  binary_search = function(low, high, value, list) {
    var mid;
    mid = parseInt((parseInt(high) + parseInt(low)) / 2);
    // console.log low + " " + high
    // console.log "mid: " + (parseInt(high) + parseInt low)/2
    if (value === list[mid]) {
      return mid;
    }
    if (high - low <= 1) {
      return -1;
    }
    if (value < list[mid]) {
      return binary_search(low, mid, value, list);
    } else if (value > list[mid]) {
      return binary_search(mid + 1, high, value, list);
    }
  };

  find_start_pos = function(list) {
    var i;
    for (i in list) {
      if (list[i] < list[(i - 1 + list.length) % list.length]) {
        return i;
      }
    }
    return 0;
  };

  search = function(nums, target) {
    var res, startpos;
    startpos = find_start_pos(nums);
    res = binary_search(0, startpos, target, nums);
    if (res === -1) {
      res = binary_search(startpos, nums.length, target, nums);
    }
    return res;
  };

  list = [4, 5, 6, 7, 0, 1, 2];

  console.log(search(list, 6));

  list = [];

  console.log(search(list, 5));

}).call(this);
